install.packages("C:/Users/Ricardo/Downloads/omnetpp_0.2-1.tar.gz", repos = NULL, type = "source")
require(omnetpp)
library("omnetpp", lib.loc="~/R/win-library/3.4")
require(omnetpp)
library("omnetpp", lib.loc="~/R/win-library/3.4")
library("omnetpp", lib.loc="~/R/win-library/3.4")
install.packages("omnetpp")
require(omnetpp)
library(corrplot)
install.packages("corrplot")
library(corrplot)
arq = "http://www.unt.edu/rss/class/mike/data/beer.txt",
arq = "http://www.unt.edu/rss/class/mike/data/beer.txt"
beer <- read.table(arq, header=TRUE)
beer = as.matrix(read.table("beer.txt", header=T))
#arq = "http://www.unt.edu/rss/class/mike/data/beer.txt"
beer <- read.table(arq, header=TRUE)
beer = as.matrix(read.table("beer.txt", header=T))
setwd("UFMG/MatÃ©rias/FECC/Lista 10/")
beer = as.matrix(read.table("beer.txt", header=T))
beer
head(beer)
summary(beer)
S = var(beer[,1:7], na.rm=T)
S
sqrt(diag(S)) # sd's not very different
R = cor(beer[,1:7], use ="complete.obs")
round(100*R)
corrplot(R, method = "ellipse")
corrplot.mixed(R, upper = "ellipse")
corrplot.mixed(R, order = "AOE", upper = "ellipse", cl.align = "r")
newbeer = na.omit(beer)
S = cov(newbeer[,1:7])
fit = eigen(S)
pca.beer = prcomp(newbeer[,1:7])
pca.beer$rot
(pca.beer$sdev)^2
fit$vectors
fit$vectors==pca.beer$rotation
fit$vectors==pca.beer$rot
fit$vectors[]==pca.beer$rot[]
sum(pca.beer$rot[,1]^2)
sum(pca.beer$rot[,2]^2)
sum(pca.beer$rot[,3]^2)
for(i in 1:7){
sum(pca.beer$rot[,i]^2)
}
for(i in 1:7){
print(sum(pca.beer$rot[,i]^2))
}
plot(pca.beer)
barplot(cumsum(pca.beer$sdev^2))
summary(pca.beer)
cargafat1 = pca.beer$sdev[1] * pca.beer$rot[,1]
cargafat2 = pca.beer$sdev[2] * pca.beer$rot[,2]
L = cbind(cargafat1, cargafat2)
rownames(L) = rownames(R)[1:7]
round(L, 2)
plot(L, type="n",xlim=c(-40, 20), ylim=c(-10, 25))
text(L, rownames(L))
abline(h=0)
abline(v=0)
phi = pi/2 + 15*(pi/180)
T = matrix(c(cos(phi), -sin(phi), sin(phi), cos(phi)), ncol=2, byrow=T)
Lstar = L %*% T
plot(Lstar, type="n", xlim=c(-20, 30), ylim=c(-15, 35))
text(Lstar, rownames(L))
abline(h=0); abline(v=0)
round(Lstar,2)
matpsi = diag(diag(S - Lstar %*% t(Lstar)))
round(matpsi, 2)
sum( (S - Lstar %*% t(Lstar) - matpsi)^2 )/sum(S^2)
